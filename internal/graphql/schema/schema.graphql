scalar Date
scalar Upload

directive @isAuthenticated on FIELD_DEFINITION
directive @isAdmin on FIELD_DEFINITION

type Query {
    user(id: ID!): User @isAdmin
    me: User @isAuthenticated
    account(id: ID!): Account @isAuthenticated
    accounts(page: PageArgs): AccountConnection! @isAuthenticated
    transaction(id: ID!): Transaction @isAuthenticated
    transactions(page: PageArgs): TransactionConnection! @isAuthenticated
    merchant(id: ID!): Merchant @isAuthenticated
    merchants(page: PageArgs): MerchantConnection! @isAuthenticated
    spending(input: StatsInput!): SpendingStats! @isAuthenticated
    income(input: StatsInput!): IncomeStats! @isAuthenticated
    net(input: StatsInput!): NetStats! @isAuthenticated
}

type Mutation {
    register(data: RegisterInput!): User!
    login(data: LoginInput!): User
    logout: String! @isAuthenticated
    deleteUser: User! @isAuthenticated
    deleteTransaction(id: ID!): Transaction! @isAuthenticated
    chaseOFXUpload(file: Upload!): UploadResponse! @isAuthenticated
}

type UploadResponse {
    success: Boolean!
    accounts: UploadStats!
    transactions: UploadStats!
}

type UploadStats {
    updated: Int!
    failed: Int!
}

input StatsInput {
    filter: DateFilter!
    page: PageArgs
}

input LoginInput {
    email: String!
    password: String!
}

input RegisterInput {
    username: String!
    email: String!
    password: String!
}

input DateFilter {
    startDate: Date!
    endDate: Date!
}
